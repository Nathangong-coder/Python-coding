<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DeepSeek Chat - Professional AI Interface</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'bounce-slow': 'bounce 1s infinite',
                    }
                }
            }
        }
    </script>
    <style>
        .glass {
            background: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(16px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        .gradient-bg {
            background: linear-gradient(135deg, #1e1b4b 0%, #581c87 50%, #1e1b4b 100%);
        }
        .typing-indicator {
            display: flex;
            align-items: center;
            gap: 4px;
        }
        .typing-dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: #a855f7;
            animation: typing 1.4s infinite ease-in-out;
        }
        .typing-dot:nth-child(1) { animation-delay: -0.32s; }
        .typing-dot:nth-child(2) { animation-delay: -0.16s; }
        .typing-dot:nth-child(3) { animation-delay: 0s; }
        
        @keyframes typing {
            0%, 80%, 100% { transform: scale(0); }
            40% { transform: scale(1); }
        }
    </style>
</head>
<body class="min-h-screen gradient-bg">
    <!-- Header -->
    <header class="glass border-b border-white/10 sticky top-0 z-50">
        <div class="max-w-6xl mx-auto px-4 py-4 flex items-center justify-between">
            <div class="flex items-center space-x-3">
                <div class="bg-gradient-to-r from-purple-500 to-pink-500 p-2 rounded-xl">
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                    </svg>
                </div>
                <div>
                    <h1 class="text-xl font-bold text-white">DeepSeek Chat</h1>
                    <p class="text-sm text-gray-300">AI-Powered Conversations</p>
                </div>
            </div>
            <div class="flex items-center space-x-2">
                <button onclick="clearChat()" class="p-2 text-gray-300 hover:text-white hover:bg-white/10 rounded-lg transition-all" title="Clear Chat">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                </button>
                <button onclick="toggleSettings()" id="settingsBtn" class="p-2 text-gray-300 hover:text-white hover:bg-white/10 rounded-lg transition-all" title="Settings">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    </svg>
                </button>
            </div>
        </div>
    </header>

    <div class="max-w-6xl mx-auto px-4 py-6 h-[calc(100vh-88px)] flex flex-col">
        <!-- Settings Panel -->
        <div id="settingsPanel" class="mb-6 glass rounded-2xl p-6 hidden">
            <h3 class="text-lg font-semibold text-white mb-4">API Configuration</h3>
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">DeepSeek API Key</label>
                    <input type="password" id="apiKeyInput" class="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="Enter your DeepSeek API key...">
                    <p class="text-xs text-gray-400 mt-2">
                        Get your API key from <a href="https://platform.deepseek.com" target="_blank" class="text-purple-400 hover:underline">DeepSeek Platform</a>
                    </p>
                </div>
            </div>
        </div>

        <!-- Chat Area -->
        <div class="flex-1 glass rounded-2xl flex flex-col overflow-hidden">
            <!-- Messages -->
            <div id="messagesContainer" class="flex-1 overflow-y-auto p-6 space-y-6">
                <div id="welcomeMessage" class="text-center py-12">
                    <div class="bg-gradient-to-r from-purple-500 to-pink-500 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                        </svg>
                    </div>
                    <h3 class="text-xl font-semibold text-white mb-2">Welcome to DeepSeek Chat</h3>
                    <p class="text-gray-400 max-w-md mx-auto">
                        Start a conversation with DeepSeek AI. Enter your API key in settings and begin chatting!
                    </p>
                </div>
            </div>

            <!-- Input Area -->
            <div class="border-t border-white/10 p-6">
                <div class="flex space-x-4">
                    <div class="flex-1">
                        <textarea id="messageInput" class="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent resize-none" placeholder="Type your message... (Press Enter to send)" rows="3"></textarea>
                    </div>
                    <button onclick="sendMessage()" id="sendBtn" class="px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl hover:from-purple-600 hover:to-pink-600 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-slate-900 disabled:opacity-50 disabled:cursor-not-allowed transition-all flex items-center justify-center min-w-[120px]">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                        </svg>
                        Send
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let sessionId = null;
        let isLoading = false;

        // Load API key from localStorage
        document.addEventListener('DOMContentLoaded', function() {
            const savedApiKey = localStorage.getItem('deepseek_api_key');
            if (savedApiKey) {
                document.getElementById('apiKeyInput').value = savedApiKey;
            }
            
            // Add enter key listener
            document.getElementById('messageInput').addEventListener('keydown', function(e) {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    sendMessage();
                }
            });
        });

        function toggleSettings() {
            const panel = document.getElementById('settingsPanel');
            panel.classList.toggle('hidden');
        }

        function saveApiKey() {
            const apiKey = document.getElementById('apiKeyInput').value;
            if (apiKey) {
                localStorage.setItem('deepseek_api_key', apiKey);
            }
        }

        function formatTime(timestamp) {
            return new Date(timestamp).toLocaleTimeString([], { 
                hour: '2-digit', 
                minute: '2-digit' 
            });
        }

        function addMessage(role, content, timestamp, isError = false) {
            const container = document.getElementById('messagesContainer');
            const welcomeMessage = document.getElementById('welcomeMessage');
            
            if (welcomeMessage) {
                welcomeMessage.remove();
            }

            const messageDiv = document.createElement('div');
            messageDiv.className = `flex items-start space-x-3 ${role === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`;

            const avatarClass = role === 'user' 
                ? 'bg-gradient-to-r from-blue-500 to-cyan-500'
                : isError 
                ? 'bg-red-500'
                : 'bg-gradient-to-r from-purple-500 to-pink-500';

            const messageClass = role === 'user'
                ? 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white'
                : isError
                ? 'bg-red-500/20 border border-red-500/30 text-red-200'
                : 'bg-white/5 border border-white/10 text-gray-100';

            const avatarIcon = role === 'user' 
                ? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>'
                : '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>';

            messageDiv.innerHTML = `
                <div class="flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center ${avatarClass}">
                    <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        ${avatarIcon}
                    </svg>
                </div>
                <div class="flex-1 max-w-3xl ${role === 'user' ? 'text-right' : 'text-left'}">
                    <div class="inline-block p-4 rounded-2xl ${messageClass}">
                        <p class="whitespace-pre-wrap break-words">${content}</p>
                    </div>
                    <p class="text-xs text-gray-400 mt-1 ${role === 'user' ? 'text-right' : 'text-left'}">
                        ${formatTime(timestamp)}
                    </p>
                </div>
            `;

            container.appendChild(messageDiv);
            container.scrollTop = container.scrollHeight;
        }

        function showTypingIndicator() {
            const container = document.getElementById('messagesContainer');
            const typingDiv = document.createElement('div');
            typingDiv.id = 'typingIndicator';
            typingDiv.className = 'flex items-start space-x-3';
            typingDiv.innerHTML = `
                <div class="flex-shrink-0 w-8 h-8 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center">
                    <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                    </svg>
                </div>
                <div class="flex-1 max-w-3xl">
                    <div class="inline-block p-4 rounded-2xl bg-white/5 border border-white/10">
                        <div class="typing-indicator">
                            <div class="typing-dot"></div>
                            <div class="typing-dot"></div>
                            <div class="typing-dot"></div>
                        </div>
                    </div>
                </div>
            `;
            container.appendChild(typingDiv);
            container.scrollTop = container.scrollHeight;
        }

        function hideTypingIndicator() {
            const typingIndicator = document.getElementById('typingIndicator');
            if (typingIndicator) {
                typingIndicator.remove();
            }
        }

        async function sendMessage() {
            if (isLoading) return;

            const messageInput = document.getElementById('messageInput');
            const apiKeyInput = document.getElementById('apiKeyInput');
            const sendBtn = document.getElementById('sendBtn');

            const message = messageInput.value.trim();
            const apiKey = apiKeyInput.value.trim();

            if (!message || !apiKey) {
                alert('Please enter both a message and API key');
                return;
            }

            // Save API key
            saveApiKey();

            // Add user message
            addMessage('user', message, new Date().toISOString());
            messageInput.value = '';

            // Show loading state
            isLoading = true;
            sendBtn.disabled = true;
            sendBtn.innerHTML = `
                <div class="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
            `;
            showTypingIndicator();

            try {
                const response = await fetch('/api/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        message: message,
                        api_key: apiKey,
                        session_id: sessionId
                    })
                });

                const data = await response.json();

                if (!response.ok) {
                    throw new Error(data.error || 'Request failed');
                }

                sessionId = data.session_id;
                hideTypingIndicator();
                addMessage('assistant', data.response, new Date().toISOString());

            } catch (error) {
                hideTypingIndicator();
                addMessage('assistant', `Error: ${error.message}. Please check your API key and try again.`, new Date().toISOString(), true);
            } finally {
                isLoading = false;
                sendBtn.disabled = false;
                sendBtn.innerHTML = `
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                    </svg>
                    Send
                `;
            }
        }

        async function clearChat() {
            if (sessionId) {
                try {
                    await fetch('/api/clear-chat', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            session_id: sessionId
                        })
                    });
                } catch (error) {
                    console.error('Error clearing chat:', error);
                }
            }

            // Clear UI
            const container = document.getElementById('messagesContainer');
            container.innerHTML = `
                <div id="welcomeMessage" class="text-center py-12">
                    <div class="bg-gradient-to-r from-purple-500 to-pink-500 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                        </svg>
                    </div>
                    <h3 class="text-xl font-semibold text-white mb-2">Welcome to DeepSeek Chat</h3>
                    <p class="text-gray-400 max-w-md mx-auto">
                        Start a conversation with DeepSeek AI. Enter your API key in settings and begin chatting!
                    </p>
                </div>
            `;
            sessionId = null;
        }
    </script>
</body>
</html>